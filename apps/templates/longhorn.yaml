{{- if .Values.longhorn.enabled }}
{{- $ns := default "longhorn-system" .Values.longhorn.namespace -}}
{{- $base := default "intern.h47.eu" .Values.baseDomain -}}
{{- $host := default (printf "longhorn.%s" $base) .Values.longhorn.host -}}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: longhorn
  namespace: {{ default "argocd" (or .Values.argocd.namespace .Values.argoCd.namespace) | quote }}
  annotations:
    argocd.argoproj.io/sync-wave: "40"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ .Values.longhorn.project | default "platform" | quote }}
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ $ns | quote }}
  sources:
    - repoURL: https://charts.longhorn.io
      chart: longhorn
      targetRevision: {{ .Values.longhorn.chartVersion | default "v1.9.1" | quote }}
      helm:
        releaseName: longhorn
        values: |
          # Empfehlung aus der Longhorn-Doku f√ºr Argo CD
          preUpgradeChecker:
            jobEnabled: false

          # ---- Optionale Defaults (bei Bedarf auskommentieren & anpassen) ----
          persistence:
            defaultClass: true
            defaultClassReplicaCount: 2
            reclaimPolicy: Delete
          ingress:
            enabled: true
            host: {{ $host }}
            ingressClassName: traefik
            annotations:
              traefik.ingress.kubernetes.io/router.entrypoints: websecure
              traefik.ingress.kubernetes.io/router.middlewares: traefik-allow-lan@kubernetescrd
              traefik.ingress.kubernetes.io/router.tls: "true"
              traefik.ingress.kubernetes.io/router.tls.certresolver: cloudflare
          # defaultSettings:
          #   defaultDataPath: /var/lib/longhorn
          #   guaranteedEngineCPU: 0.2
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
{{- end }}