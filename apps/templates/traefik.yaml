{{- if .Values.traefik.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "30"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: platform
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ .Values.traefik.namespace | default "traefik" | quote }}
  source:
    repoURL: https://traefik.github.io/charts
    chart: traefik
    targetRevision: {{ .Values.traefik.chartVersion | default "37.1.1" | quote }}
    helm:
      releaseName: traefik
      values: |
        # --- IngressClass ---
        ingressClass:
          enabled: true
          isDefaultClass: true
          name: traefik

        # --- Provider (CRD + Ingress) ---
        providers:
          kubernetesCRD:
            enabled: true
          kubernetesIngress:
            enabled: true
            publishedService:
              enabled: true

        # --- Services/Ports: ClusterIP (für Cloudflared) ---
        service:
          enabled: true
          type: LoadBalancer
          annotations:
            metallb.universe.tf/address-pool: lb-static   # moderner Key
          loadBalancerIP: 192.168.178.222        # nur wenn du den statischen Pool nutzt
          externalTrafficPolicy: Local           # echte Client-IP erhalten

        ports:
          web:
            port: 8000
            expose:
              default: true
            exposedPort: 80
          websecure:
            port: 8443
            expose:
              default: true   
            exposedPort: 443
            tls:
              enabled: true

        # --- HTTPS erzwingen & ACME (DNS-01 via Cloudflare) ---
        additionalArguments:
          - "--entrypoints.web.address=:80/tcp"
          - "--entrypoints.websecure.address=:443/tcp"
          - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
          - "--entrypoints.web.http.redirections.entrypoint.scheme=https"

          # ACME Resolver bleibt wie bei dir:
          - "--certificatesresolvers.cloudflare.acme.email=admin@h47.eu"
          - "--certificatesresolvers.cloudflare.acme.storage=/data/acme.json"
          - "--certificatesresolvers.cloudflare.acme.dnschallenge=true"
          - "--certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare"
        # - "--certificatesresolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53"

          # NEU: Domains gehören unter den EntryPoint, nicht unter ACME:
        #  - "--entrypoints.websecure.http.tls.certresolver=cloudflare"
        #  - "--entrypoints.websecure.http.tls.domains[0].main=h47.eu"
        #  - "--entrypoints.websecure.http.tls.domains[0].sans=*.h47.eu"
        #  - "--entrypoints.websecure.http.tls.domains[1].main=intern.h47.eu"
        #  - "--entrypoints.websecure.http.tls.domains[1].sans=*.intern.h47.eu"

        podSecurityContext:
          fsGroup: 65532
          fsGroupChangePolicy: OnRootMismatch

        securityContext:
          runAsNonRoot: true
          runAsUser: 65532
          runAsGroup: 65532

        # --- ACME-Speicher persistent ---
        persistence:
          enabled: true
          accessMode: ReadWriteOnce
          size: 1Gi
          path: /data

        # --- Cloudflare API Token aus Secret ---
        envFrom:
          - secretRef:
              name: cloudflare-dns
        deployment:
          replicas: 2
        persistence:
          enabled: true
          storageClass: <rwx-class>   # RWX!
          accessMode: ReadWriteMany   # wichtig
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
{{- end }}