{{- if or .Values.argocd.enabled .Values.argocd.enabled }}
{{- /* sichere Defaults & Abwärtskompatibilität für argocd/argocd */ -}}
{{- $ns      := default "argocd"        (or .Values.argocd.namespace .Values.argocd.namespace) -}}
{{- $base    := default "intern.h47.eu" .Values.baseDomain -}}
{{- $host    := default (printf "argocd.%s" $base) (or .Values.argocd.host .Values.argocd.host) -}}
{{- $rev     := default "HEAD"          (or .Values.argocd.revision .Values.argocd.revision) -}}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argo-cd
  namespace: {{ $ns }}
  annotations:
    argocd.argoproj.io/sync-wave: "10"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ .Values.argocd.project | default "platform" | quote }}
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ $ns | quote }}
  source:
    repoURL: https://github.com/hal-47/halkube.git
    targetRevision: {{ $rev | quote }}
    path: charts/argo-cd
    helm:
      releaseName: argo-cd
      values: |
        argo-cd:
          redis:
            secretInit:
              enabled: false
          configs:
            cm:
              url: https://{{ $host }}
            params:
              server.insecure: "true"   # entspricht argocd-cmd-params-cm
          server:
            # 2) Ingress über Traefik (HTTPS). Zert via Traefik-ACME 'cloudflare'
            ingress:
              enabled: true
              ingressClassName: traefik-internal
              annotations:
                traefik.ingress.kubernetes.io/router.entrypoints: websecure
                traefik.ingress.kubernetes.io/router.tls: "true"
                traefik.ingress.kubernetes.io/router.tls.certresolver: cloudflare
                # argocd CLI (gRPC über h2c)
                traefik.ingress.kubernetes.io/service.serversscheme: h2c
              hosts:
                - {{ $host }}
              # Wenn du lieber dein Wildcard-Secret vom cert-manager nutzt:
              # tls:
              # - hosts:
              #   - {{ $host }}
              #   secretName: wildcard-intern-h47-eu-tls
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
{{- end }}